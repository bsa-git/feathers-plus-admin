{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.set.js","webpack:///./node_modules/vuetify/src/components/VTreeview/VTreeview.sass?757b","webpack:///./node_modules/vuetify/src/components/VTreeview/VTreeview.sass","webpack:///../../../src/components/VTreeview/VTreeviewNode.ts","webpack:///../../../../src/components/VTreeview/util/filterTreeItems.ts","webpack:///../../../src/components/VTreeview/VTreeview.ts"],"names":["strong","validate","module","exports","get","this","arguments","length","undefined","add","value","def","content","i","locals","default","___CSS_LOADER_API_IMPORT___","push","baseMixins","mixins","VTreeviewNodeProps","activatable","activeClass","type","color","expandIcon","indeterminateIcon","itemChildren","itemDisabled","itemKey","itemText","loadChildren","loadingIcon","offIcon","onIcon","openOnClick","rounded","selectable","selectedColor","shaped","transition","Boolean","name","inject","treeview","props","item","data","hasLoaded","isActive","isIndeterminate","isLoading","isOpen","isSelected","computed","disabled","key","children","text","scopedProps","leaf","selected","indeterminate","active","open","computedIcon","hasChildren","created","beforeDestroy","methods","checkChildren","Promise","resolve","genLabel","$scopedSlots","label","$createElement","slot","staticClass","genContent","prepend","append","genToggle","VIcon","class","on","click","e","genCheckbox","genNode","setTextColor","genChild","VTreeviewNode","scopedSlots","genChildrenWrapper","map","genTransition","render","h","isExcluded","attrs","String","search","filter","match","filterTreeItems","excluded","provide","dense","hoverable","items","multipleActive","openAll","returnObject","selectionType","validator","v","includes","activeCache","nodes","openCache","selectedCache","Set","excludedItems","watch","handler","oldKeys","Object","k","newKeys","getKeys","diff","oldSelectedCache","emitSelected","deep","mounted","$slots","console","updateAll","keys","buildTree","parent","oldNode","hasOwnProperty","vnode","node","c","calculateState","counts","state","emitOpen","emitActive","emitNodeCache","handleNodeCacheWatcher","old","updateFn","emitFn","getDescendants","descendants","getParents","parents","register","unregister","isParent","updateActive","delete","updateSelected","changed","descendant","updateOpen","updateVnodeState","has","themeClasses"],"mappings":"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","file":"951ae2d3bf6aae264c4f.js","sourcesContent":["'use strict';\nvar strong = require('./_collection-strong');\nvar validate = require('./_validate-collection');\nvar SET = 'Set';\n\n// 23.2 Set Objects\nmodule.exports = require('./_collection')(SET, function (get) {\n  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };\n}, {\n  // 23.2.3.1 Set.prototype.add(value)\n  add: function add(value) {\n    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);\n  }\n}, strong);\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../sass-loader/dist/cjs.js??ref--6-oneOf-1-3!./VTreeview.sass\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"811c37a6\", content, true, {\"sourceMap\":false});","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Playball);\"]);\n// Module\nexports.push([module.id, \".main-content{min-width:100%}.close-icon{text-decoration:none}.exotic--dark{color:#fff;text-shadow:0 1px 1px #a1a1a1}.exotic--light{color:#212121;text-shadow:0 1px 1px #bdbdbd}.exotic--font{font-family:playball,sans-serif!important}.error-box h1{font-size:150px;line-height:150px;font-weight:700}.error-box img{height:20vh}.theme--light.v-treeview{color:rgba(0,0,0,.87)}.theme--light.v-treeview--hoverable .v-treeview-node__root:hover:before,.theme--light.v-treeview .v-treeview-node--click>.v-treeview-node__root:hover:before{opacity:.04}.theme--light.v-treeview--hoverable .v-treeview-node__root--active:before,.theme--light.v-treeview--hoverable .v-treeview-node__root--active:hover:before,.theme--light.v-treeview--hoverable .v-treeview-node__root:focus:before,.theme--light.v-treeview .v-treeview-node--click>.v-treeview-node__root--active:before,.theme--light.v-treeview .v-treeview-node--click>.v-treeview-node__root--active:hover:before,.theme--light.v-treeview .v-treeview-node--click>.v-treeview-node__root:focus:before{opacity:.12}.theme--light.v-treeview--hoverable .v-treeview-node__root--active:focus:before,.theme--light.v-treeview .v-treeview-node--click>.v-treeview-node__root--active:focus:before{opacity:.16}.theme--light.v-treeview .v-treeview-node__root.v-treeview-node--active:before,.theme--light.v-treeview .v-treeview-node__root.v-treeview-node--active:hover:before{opacity:.12}.theme--light.v-treeview .v-treeview-node__root.v-treeview-node--active:focus:before{opacity:.16}.theme--light.v-treeview .v-treeview-node--disabled{color:rgba(0,0,0,.38)}.theme--light.v-treeview .v-treeview-node--disabled .v-treeview-node__checkbox,.theme--light.v-treeview .v-treeview-node--disabled .v-treeview-node__toggle{color:rgba(0,0,0,.38)!important}.theme--dark.v-treeview{color:#fff}.theme--dark.v-treeview--hoverable .v-treeview-node__root:hover:before,.theme--dark.v-treeview .v-treeview-node--click>.v-treeview-node__root:hover:before{opacity:.08}.theme--dark.v-treeview--hoverable .v-treeview-node__root--active:before,.theme--dark.v-treeview--hoverable .v-treeview-node__root--active:hover:before,.theme--dark.v-treeview--hoverable .v-treeview-node__root:focus:before,.theme--dark.v-treeview .v-treeview-node--click>.v-treeview-node__root--active:before,.theme--dark.v-treeview .v-treeview-node--click>.v-treeview-node__root--active:hover:before,.theme--dark.v-treeview .v-treeview-node--click>.v-treeview-node__root:focus:before{opacity:.24}.theme--dark.v-treeview--hoverable .v-treeview-node__root--active:focus:before,.theme--dark.v-treeview .v-treeview-node--click>.v-treeview-node__root--active:focus:before{opacity:.32}.theme--dark.v-treeview .v-treeview-node__root.v-treeview-node--active:before,.theme--dark.v-treeview .v-treeview-node__root.v-treeview-node--active:hover:before{opacity:.24}.theme--dark.v-treeview .v-treeview-node__root.v-treeview-node--active:focus:before{opacity:.32}.theme--dark.v-treeview .v-treeview-node--disabled{color:hsla(0,0%,100%,.5)}.theme--dark.v-treeview .v-treeview-node--disabled .v-treeview-node__checkbox,.theme--dark.v-treeview .v-treeview-node--disabled .v-treeview-node__toggle{color:hsla(0,0%,100%,.5)!important}.v-application--is-ltr .v-treeview>.v-treeview-node{margin-left:0}.v-application--is-rtl .v-treeview>.v-treeview-node{margin-right:0}.v-application--is-ltr .v-treeview>.v-treeview-node--leaf{margin-left:16px}.v-application--is-rtl .v-treeview>.v-treeview-node--leaf{margin-right:16px}.v-application--is-ltr .v-treeview>.v-treeview-node--leaf>.v-treeview-node__root,.v-application--is-rtl .v-treeview>.v-treeview-node--leaf>.v-treeview-node__root{padding-left:8px;padding-right:8px}.v-application--is-ltr .v-treeview-node{margin-left:26px}.v-application--is-rtl .v-treeview-node{margin-right:26px}.v-treeview-node--disabled{pointer-events:none}.v-treeview-node.v-treeview-node--shaped .v-treeview-node__root,.v-treeview-node.v-treeview-node--shaped .v-treeview-node__root:before{border-bottom-right-radius:24px!important;border-top-right-radius:24px!important}.v-treeview-node.v-treeview-node--shaped .v-treeview-node__root{margin-top:8px;margin-bottom:8px}.v-treeview-node.v-treeview-node--rounded .v-treeview-node__root,.v-treeview-node.v-treeview-node--rounded .v-treeview-node__root:before{border-radius:24px!important}.v-treeview-node.v-treeview-node--rounded .v-treeview-node__root{margin-top:8px;margin-bottom:8px}.v-treeview-node--excluded{display:none}.v-treeview-node--click>.v-treeview-node__root,.v-treeview-node--click>.v-treeview-node__root>.v-treeview-node__content>*{cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.v-application--is-ltr .v-treeview-node--leaf{margin-left:26px}.v-application--is-rtl .v-treeview-node--leaf{margin-right:26px}.v-application--is-ltr .v-treeview-node--leaf>.v-treeview-node__root{padding-left:24px;padding-right:8px}.v-application--is-rtl .v-treeview-node--leaf>.v-treeview-node__root{padding-right:24px;padding-left:8px}.v-treeview-node__root{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;min-height:48px;position:relative}.v-application--is-ltr .v-treeview-node__root{padding-right:8px}.v-application--is-rtl .v-treeview-node__root{padding-left:8px}.v-treeview-node__root:before{background-color:currentColor;bottom:0;content:\\\"\\\";left:0;opacity:0;pointer-events:none;position:absolute;right:0;top:0;-webkit-transition:.3s cubic-bezier(.25,.8,.5,1);transition:.3s cubic-bezier(.25,.8,.5,1)}.v-treeview-node__root.v-treeview-node--active .v-treeview-node__content .v-icon{color:inherit}.v-treeview-node__content{-webkit-box-align:center;align-items:center;display:-webkit-box;display:flex;flex-basis:0%;-webkit-box-flex:1;flex-grow:1;flex-shrink:0;min-width:0}.v-treeview-node__content .v-btn{-webkit-box-flex:0!important;flex-grow:0!important;flex-shrink:1!important}.v-treeview-node__label{-webkit-box-flex:1;flex:1;font-size:inherit;margin-left:6px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.v-treeview-node__label .v-icon{padding-right:8px}.v-treeview-node__checkbox,.v-treeview-node__toggle{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.v-application--is-ltr .v-treeview-node__toggle{-webkit-transform:rotate(-90deg);transform:rotate(-90deg)}.v-application--is-rtl .v-treeview-node__toggle{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.v-application--is-ltr .v-treeview-node__toggle--open,.v-application--is-rtl .v-treeview-node__toggle--open,.v-treeview-node__toggle--loading{-webkit-transform:none;transform:none}.v-treeview-node__toggle--loading{-webkit-animation:progress-circular-rotate 1s linear infinite;animation:progress-circular-rotate 1s linear infinite}.v-treeview-node__children{-webkit-transition:all .2s cubic-bezier(0,0,.2,1);transition:all .2s cubic-bezier(0,0,.2,1)}.v-treeview--dense .v-treeview-node__root{min-height:40px}.v-treeview--dense.v-treeview-node--shaped .v-treeview-node__root,.v-treeview--dense.v-treeview-node--shaped .v-treeview-node__root:before{border-bottom-right-radius:20px!important;border-top-right-radius:20px!important}.v-treeview--dense.v-treeview-node--shaped .v-treeview-node__root{margin-top:8px;margin-bottom:8px}.v-treeview--dense.v-treeview-node--rounded .v-treeview-node__root,.v-treeview--dense.v-treeview-node--rounded .v-treeview-node__root:before{border-radius:20px!important}.v-treeview--dense.v-treeview-node--rounded .v-treeview-node__root{margin-top:8px;margin-bottom:8px}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Components\nimport { VExpandTransition } from '../transitions'\nimport { VIcon } from '../VIcon'\nimport VTreeview from './VTreeview'\nimport VTreeviewNode from './VTreeviewNode'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { getObjectValueByPath } from '../../util/helpers'\nimport { PropValidator } from 'vue/types/options'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VTreeViewInstance = InstanceType<typeof VTreeview>\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject('treeview')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  treeview: VTreeViewInstance\n}\n\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active',\n  },\n  color: {\n    type: String,\n    default: 'primary',\n  },\n  expandIcon: {\n    type: String,\n    default: '$subgroup',\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate',\n  },\n  itemChildren: {\n    type: String,\n    default: 'children',\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled',\n  },\n  itemKey: {\n    type: String,\n    default: 'id',\n  },\n  itemText: {\n    type: String,\n    default: 'name',\n  },\n  loadChildren: Function as PropValidator<(item: any) => Promise<void>>,\n  loadingIcon: {\n    type: String,\n    default: '$loading',\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff',\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn',\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent',\n  },\n  shaped: Boolean,\n  transition: Boolean,\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-treeview-node',\n\n  inject: {\n    treeview: {\n      default: null,\n    },\n  },\n\n  props: {\n    item: {\n      type: Object,\n      default: () => null,\n    },\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    hasLoaded: false,\n    isActive: false, // Node is selected (row)\n    isIndeterminate: false, // Node has at least one selected child\n    isLoading: false,\n    isOpen: false, // Node is open/expanded\n    isSelected: false, // Node is selected (checkbox)\n  }),\n\n  computed: {\n    disabled (): string {\n      return getObjectValueByPath(this.item, this.itemDisabled)\n    },\n    key (): string {\n      return getObjectValueByPath(this.item, this.itemKey)\n    },\n    children (): any[] | null {\n      return getObjectValueByPath(this.item, this.itemChildren)\n    },\n    text (): string {\n      return getObjectValueByPath(this.item, this.itemText)\n    },\n    scopedProps (): object {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen,\n      }\n    },\n    computedIcon (): string {\n      if (this.isIndeterminate) return this.indeterminateIcon\n      else if (this.isSelected) return this.onIcon\n      else return this.offIcon\n    },\n    hasChildren (): boolean {\n      return !!this.children && (!!this.children.length || !!this.loadChildren)\n    },\n  },\n\n  created () {\n    this.treeview.register(this)\n  },\n\n  beforeDestroy () {\n    this.treeview.unregister(this)\n  },\n\n  methods: {\n    checkChildren (): Promise<void> {\n      return new Promise<void>(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve()\n\n        this.isLoading = true\n        resolve(this.loadChildren(this.item))\n      }).then(() => {\n        this.isLoading = false\n        this.hasLoaded = true\n      })\n    },\n    open () {\n      this.isOpen = !this.isOpen\n      this.treeview.updateOpen(this.key, this.isOpen)\n      this.treeview.emitOpen()\n    },\n    genLabel () {\n      const children = []\n\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps))\n      else children.push(this.text)\n\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label',\n      }, children)\n    },\n    genContent () {\n      const children = [\n        this.$scopedSlots.prepend && this.$scopedSlots.prepend(this.scopedProps),\n        this.genLabel(),\n        this.$scopedSlots.append && this.$scopedSlots.append(this.scopedProps),\n      ]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content',\n      }, children)\n    },\n    genToggle () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading,\n        },\n        slot: 'prepend',\n        on: {\n          click: (e: MouseEvent) => {\n            if (this.disabled) return\n\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => this.open())\n          },\n        },\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon])\n    },\n    genCheckbox () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected ? this.selectedColor : undefined,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (this.disabled) return\n\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected\n                this.isIndeterminate = false\n\n                this.treeview.updateSelected(this.key, this.isSelected)\n                this.treeview.emitSelected()\n              })\n            })\n          },\n        },\n      }, [this.computedIcon])\n    },\n    genNode (): VNode {\n      const children = [this.genContent()]\n\n      if (this.selectable) children.unshift(this.genCheckbox())\n      if (this.hasChildren) children.unshift(this.genToggle())\n\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: {\n          [this.activeClass]: this.isActive,\n        },\n        on: {\n          click: () => {\n            if (this.disabled) return\n\n            if (this.openOnClick && this.hasChildren) {\n              this.open()\n            } else if (this.activatable) {\n              this.isActive = !this.isActive\n              this.treeview.updateActive(this.key, this.isActive)\n              this.treeview.emitActive()\n            }\n          },\n        },\n      }), children)\n    },\n    genChild (item: any): VNode {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped,\n        },\n        scopedSlots: this.$scopedSlots,\n      })\n    },\n    genChildrenWrapper (): any {\n      if (!this.isOpen || !this.children) return null\n\n      const children = [this.children.map(this.genChild)]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children',\n      }, children)\n    },\n    genTransition () {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genNode()]\n\n    if (this.transition) children.push(this.genTransition())\n    else children.push(this.genChildrenWrapper())\n\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected,\n        'v-treeview-node--excluded': this.treeview.isExcluded(this.key),\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen),\n      },\n    }, children)\n  },\n})\n","import { getObjectValueByPath } from '../../../util/helpers'\n\nexport type FilterTreeItemFunction = (item: object, search: string, textKey: string) => boolean\n\nexport function filterTreeItem (item: object, search: string, textKey: string): boolean {\n  const text = getObjectValueByPath(item, textKey)\n\n  return text.toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) > -1\n}\n\nexport function filterTreeItems (\n  filter: FilterTreeItemFunction,\n  item: any,\n  search: string,\n  idKey: string,\n  textKey: string,\n  childrenKey: string,\n  excluded: Set<string | number>\n): boolean {\n  if (filter(item, search, textKey)) {\n    return true\n  }\n\n  const children = getObjectValueByPath(item, childrenKey)\n\n  if (children) {\n    let match = false\n    for (let i = 0; i < children.length; i++) {\n      if (filterTreeItems(filter, children[i], search, idKey, textKey, childrenKey, excluded)) {\n        match = true\n      }\n    }\n\n    if (match) return true\n  }\n\n  excluded.add(getObjectValueByPath(item, idKey))\n\n  return false\n}\n","// Styles\nimport './VTreeview.sass'\n\n// Types\nimport { VNode, VNodeChildrenArrayContents } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\n// Components\nimport VTreeviewNode, { VTreeviewNodeProps } from './VTreeviewNode'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utils\nimport {\n  arrayDiff,\n  deepEqual,\n  getObjectValueByPath,\n} from '../../util/helpers'\nimport mixins from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\nimport {\n  filterTreeItems,\n  FilterTreeItemFunction,\n  filterTreeItem,\n} from './util/filterTreeItems'\n\ntype VTreeviewNodeInstance = InstanceType<typeof VTreeviewNode>\n\ntype NodeCache = Set<string | number>\ntype NodeArray = (string | number)[]\n\ntype NodeState = {\n  parent: number | string | null\n  children: (number | string)[]\n  vnode: VTreeviewNodeInstance | null\n  isActive: boolean\n  isSelected: boolean\n  isIndeterminate: boolean\n  isOpen: boolean\n  item: any\n}\n\nexport default mixins(\n  RegistrableProvide('treeview'),\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-treeview',\n\n  provide (): object {\n    return { treeview: this }\n  },\n\n  props: {\n    active: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    dense: Boolean,\n    filter: Function as PropValidator<FilterTreeItemFunction>,\n    hoverable: Boolean,\n    items: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<any[]>,\n    multipleActive: Boolean,\n    open: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    openAll: Boolean,\n    returnObject: {\n      type: Boolean,\n      default: false, // TODO: Should be true in next major\n    },\n    search: String,\n    selectionType: {\n      type: String,\n      default: 'leaf',\n      validator: (v: string) => ['leaf', 'independent'].includes(v),\n    } as PropValidator<'leaf' | 'independent'>,\n    value: {\n      type: Array,\n      default: () => ([]),\n    } as PropValidator<NodeArray>,\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    activeCache: new Set() as NodeCache,\n    nodes: {} as Record<string | number, NodeState>,\n    openCache: new Set() as NodeCache,\n    selectedCache: new Set() as NodeCache,\n  }),\n\n  computed: {\n    excludedItems (): Set<string | number> {\n      const excluded = new Set<string|number>()\n\n      if (!this.search) return excluded\n\n      for (let i = 0; i < this.items.length; i++) {\n        filterTreeItems(\n          this.filter || filterTreeItem,\n          this.items[i],\n          this.search,\n          this.itemKey,\n          this.itemText,\n          this.itemChildren,\n          excluded\n        )\n      }\n\n      return excluded\n    },\n  },\n\n  watch: {\n    items: {\n      handler () {\n        const oldKeys = Object.keys(this.nodes).map(k => getObjectValueByPath(this.nodes[k].item, this.itemKey))\n        const newKeys = this.getKeys(this.items)\n        const diff = arrayDiff(newKeys, oldKeys)\n\n        // We only want to do stuff if items have changed\n        if (!diff.length && newKeys.length < oldKeys.length) return\n\n        // If nodes are removed we need to clear them from this.nodes\n        diff.forEach(k => delete this.nodes[k])\n\n        const oldSelectedCache = [...this.selectedCache]\n        this.selectedCache = new Set()\n        this.activeCache = new Set()\n        this.openCache = new Set()\n        this.buildTree(this.items)\n\n        // Only emit selected if selection has changed\n        // as a result of items changing. This fixes a\n        // potential double emit when selecting a node\n        // with dynamic children\n        if (!deepEqual(oldSelectedCache, [...this.selectedCache])) this.emitSelected()\n      },\n      deep: true,\n    },\n    active (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.activeCache, this.updateActive, this.emitActive)\n    },\n    value (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.selectedCache, this.updateSelected, this.emitSelected)\n    },\n    open (value: (string | number | any)[]) {\n      this.handleNodeCacheWatcher(value, this.openCache, this.updateOpen, this.emitOpen)\n    },\n  },\n\n  created () {\n    this.buildTree(this.items)\n    this.value.forEach(key => this.updateSelected(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n    this.active.forEach(key => this.updateActive(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n  },\n\n  mounted () {\n    // Save the developer from themselves\n    if (this.$slots.prepend || this.$slots.append) {\n      consoleWarn('The prepend and append slots require a slot-scope attribute', this)\n    }\n\n    if (this.openAll) {\n      this.updateAll(true)\n    } else {\n      this.open.forEach(key => this.updateOpen(this.returnObject ? getObjectValueByPath(key, this.itemKey) : key, true))\n      this.emitOpen()\n    }\n  },\n\n  methods: {\n    /** @public */\n    updateAll (value: boolean) {\n      Object.keys(this.nodes).forEach(key => this.updateOpen(getObjectValueByPath(this.nodes[key].item, this.itemKey), value))\n      this.emitOpen()\n    },\n    getKeys (items: any[], keys: any[] = []) {\n      for (let i = 0; i < items.length; i++) {\n        const key = getObjectValueByPath(items[i], this.itemKey)\n        keys.push(key)\n        const children = getObjectValueByPath(items[i], this.itemChildren)\n        if (children) {\n          keys.push(...this.getKeys(children))\n        }\n      }\n\n      return keys\n    },\n    buildTree (items: any[], parent: (string | number | null) = null) {\n      for (let i = 0; i < items.length; i++) {\n        const item = items[i]\n        const key = getObjectValueByPath(item, this.itemKey)\n        const children = getObjectValueByPath(item, this.itemChildren, [])\n        const oldNode = this.nodes.hasOwnProperty(key) ? this.nodes[key] : {\n          isSelected: false, isIndeterminate: false, isActive: false, isOpen: false, vnode: null,\n        } as NodeState\n\n        const node: any = {\n          vnode: oldNode.vnode,\n          parent,\n          children: children.map((c: any) => getObjectValueByPath(c, this.itemKey)),\n          item,\n        }\n\n        this.buildTree(children, key)\n\n        // This fixed bug with dynamic children resetting selected parent state\n        if (!this.nodes.hasOwnProperty(key) && parent !== null && this.nodes.hasOwnProperty(parent)) {\n          node.isSelected = this.nodes[parent].isSelected\n          node.isIndeterminate = this.nodes[parent].isIndeterminate\n        } else {\n          node.isSelected = oldNode.isSelected\n          node.isIndeterminate = oldNode.isIndeterminate\n        }\n\n        node.isActive = oldNode.isActive\n        node.isOpen = oldNode.isOpen\n\n        this.nodes[key] = !children.length ? node : this.calculateState(node, this.nodes)\n\n        // Don't forget to rebuild cache\n        if (this.nodes[key].isSelected) this.selectedCache.add(key)\n        if (this.nodes[key].isActive) this.activeCache.add(key)\n        if (this.nodes[key].isOpen) this.openCache.add(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    calculateState (node: NodeState, state: Record<string | number, NodeState>) {\n      const counts = node.children.reduce((counts: number[], child: string | number) => {\n        counts[0] += +Boolean(state[child].isSelected)\n        counts[1] += +Boolean(state[child].isIndeterminate)\n        return counts\n      }, [0, 0])\n\n      node.isSelected = !!node.children.length && counts[0] === node.children.length\n      node.isIndeterminate = !node.isSelected && (counts[0] > 0 || counts[1] > 0)\n\n      return node\n    },\n    emitOpen () {\n      this.emitNodeCache('update:open', this.openCache)\n    },\n    emitSelected () {\n      this.emitNodeCache('input', this.selectedCache)\n    },\n    emitActive () {\n      this.emitNodeCache('update:active', this.activeCache)\n    },\n    emitNodeCache (event: string, cache: NodeCache) {\n      this.$emit(event, this.returnObject ? [...cache].map(key => this.nodes[key].item) : [...cache])\n    },\n    handleNodeCacheWatcher (value: any[], cache: NodeCache, updateFn: Function, emitFn: Function) {\n      value = this.returnObject ? value.map(v => getObjectValueByPath(v, this.itemKey)) : value\n      const old = [...cache]\n      if (deepEqual(old, value)) return\n\n      old.forEach(key => updateFn(key, false))\n      value.forEach(key => updateFn(key, true))\n\n      emitFn()\n    },\n    getDescendants (key: string | number, descendants: NodeArray = []) {\n      const children = this.nodes[key].children\n\n      descendants.push(...children)\n\n      for (let i = 0; i < children.length; i++) {\n        descendants = this.getDescendants(children[i], descendants)\n      }\n\n      return descendants\n    },\n    getParents (key: string | number) {\n      let parent = this.nodes[key].parent\n\n      const parents = []\n      while (parent !== null) {\n        parents.push(parent)\n        parent = this.nodes[parent].parent\n      }\n\n      return parents\n    },\n    register (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      this.nodes[key].vnode = node\n\n      this.updateVnodeState(key)\n    },\n    unregister (node: VTreeviewNodeInstance) {\n      const key = getObjectValueByPath(node.item, this.itemKey)\n      if (this.nodes[key]) this.nodes[key].vnode = null\n    },\n    isParent (key: string | number) {\n      return this.nodes[key].children && this.nodes[key].children.length\n    },\n    updateActive (key: string | number, isActive: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      if (!this.multipleActive) {\n        this.activeCache.forEach(active => {\n          this.nodes[active].isActive = false\n          this.updateVnodeState(active)\n          this.activeCache.delete(active)\n        })\n      }\n\n      const node = this.nodes[key]\n      if (!node) return\n\n      if (isActive) this.activeCache.add(key)\n      else this.activeCache.delete(key)\n\n      node.isActive = isActive\n\n      this.updateVnodeState(key)\n    },\n    updateSelected (key: string | number, isSelected: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const changed = new Map()\n\n      if (this.selectionType !== 'independent') {\n        const descendants = [key, ...this.getDescendants(key)]\n        descendants.forEach(descendant => {\n          this.nodes[descendant].isSelected = isSelected\n          this.nodes[descendant].isIndeterminate = false\n          changed.set(descendant, isSelected)\n        })\n\n        const parents = this.getParents(key)\n        parents.forEach(parent => {\n          this.nodes[parent] = this.calculateState(this.nodes[parent], this.nodes)\n          changed.set(parent, this.nodes[parent].isSelected)\n        })\n      } else {\n        this.nodes[key].isSelected = isSelected\n        this.nodes[key].isIndeterminate = false\n        changed.set(key, isSelected)\n      }\n\n      for (const [key, value] of changed.entries()) {\n        this.updateVnodeState(key)\n\n        if (this.selectionType === 'leaf' && this.isParent(key)) continue\n\n        value === true ? this.selectedCache.add(key) : this.selectedCache.delete(key)\n      }\n    },\n    updateOpen (key: string | number, isOpen: boolean) {\n      if (!this.nodes.hasOwnProperty(key)) return\n\n      const node = this.nodes[key]\n      const children = getObjectValueByPath(node.item, this.itemChildren)\n\n      if (children && !children.length && node.vnode && !node.vnode.hasLoaded) {\n        node.vnode.checkChildren().then(() => this.updateOpen(key, isOpen))\n      } else if (children && children.length) {\n        node.isOpen = isOpen\n\n        node.isOpen ? this.openCache.add(key) : this.openCache.delete(key)\n\n        this.updateVnodeState(key)\n      }\n    },\n    updateVnodeState (key: string | number) {\n      const node = this.nodes[key]\n\n      if (node && node.vnode) {\n        node.vnode.isSelected = node.isSelected\n        node.vnode.isIndeterminate = node.isIndeterminate\n        node.vnode.isActive = node.isActive\n        node.vnode.isOpen = node.isOpen\n      }\n    },\n    isExcluded (key: string | number) {\n      return !!this.search && this.excludedItems.has(key)\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildrenArrayContents = this.items.length\n      ? this.items.map(VTreeviewNode.options.methods.genChild.bind(this))\n      /* istanbul ignore next */\n      : this.$slots.default! // TODO: remove type annotation with TS 3.2\n\n    return h('div', {\n      staticClass: 'v-treeview',\n      class: {\n        'v-treeview--hoverable': this.hoverable,\n        'v-treeview--dense': this.dense,\n        ...this.themeClasses,\n      },\n    }, children)\n  },\n})\n"],"sourceRoot":""}